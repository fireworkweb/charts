mysql:
  # asdadsa:

redis:
  # asdadsa:

generic:
  # imagePullSecrets:

  initContainers:
    # - name: init-storage
    #   image:
    #     repository:
    #     pullPolicy: Always
    #     tag:
    #   command: ["/bin/sh", "-c", "cp -r /app/storage/* /tmp/storage/ && chown -R fwd. /tmp/storage"]
    #   envFrom:
    #     - secretRef:
    #         name: env
    #   volumeMounts:
    #     - name: storage
    #       mountPath: /tmp/storage
    #       subPath: storage
    - name: migrate
      image:
        repository:
        pullPolicy: Always
        tag:
      args: ["php", "artisan", "migrate", "--force", "--step"]
      envFrom:
        - secretRef:
            name: env
      # volumeMounts:
      #   - name: storage
      #     mountPath: /app/storage
      #     subPath: storage

  containers:
    - name: app
      image:
        repository:
        pullPolicy: Always
        tag:
      ports:
        - containerPort: 9000
      livenessProbe:
        tcpSocket:
          port: 9000
      envFrom:
        - secretRef:
            name: env
      # volumeMounts:
      #   - name: storage
      #     mountPath: /app/storage
      #     subPath: storage
    - name: http
      image:
        repository:
        pullPolicy: Always
        tag:
      ports:
        - containerPort: 80
      livenessProbe:
        tcpSocket:
          port: 80
      envFrom:
        - secretRef:
            name: env
      # volumeMounts:
      #   - name: storage
      #     mountPath: /app/storage
      #     subPath: storage
    - name: worker
      image:
        repository:
        pullPolicy: Always
        tag:
      args: ["php", "artisan", "queue:work"]
      envFrom:
        - secretRef:
            name: env
      # volumeMounts:
      #   - name: storage
      #     mountPath: /app/storage
      #     subPath: storage

  secrets:
    - name: env
      data:
        LOG_CHANNEL: "stderr"
        APP_NAME: "Example"
        # APP_ENV: "development"
        # APP_KEY: ""
        # APP_DEBUG: "true"
        # APP_URL: "https://url"

  # storages:
  #   - name: storage
  #     accessModes:
  #       - ReadWriteOnce
  #     size: 1Gi

  # volumes:
  #   - name: storage
  #     persistentVolumeClaim:
  #       claimName: storage

  services:
    - type: ClusterIP
      port: 80

  # ingresses:
  #   - hosts:
  #       - host: chart-example.local
  #         paths:
  #           - serviceName: default
  #             servicePort: 80
  #     # annotations:
  #     #   kubernetes.io/ingress.class: nginx
  #     # tls:
  #     #   - secretName: chart-example-tls
  #     #     hosts:
  #     #       - chart-example.local
