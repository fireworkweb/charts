replicaCount: 1

# imagePullSecrets:
nameOverride: ""
fullnameOverride: ""

# initContainers:
#   - name: init
#     image:
#       repository: nginx
#       pullPolicy: Always
#       tag: "latest"
#     # command: []
#     # args: []
#     # env:
#     #   - name: SOME_ENV
#     #     value: "some value"
#     # envFrom:
#     #   - secretRef:
#     #       name: env
#     # volumeMounts:
#     #   - name: config
#     #     mountPath:
#     #   - name: volume
#     #     mountPath:
#     #     subPath:
#     # resources:
#     #   limits:
#     #     cpu: 100m
#     #     memory: 128Mi
#     #   requests:
#     #     cpu: 100m
#     #     memory: 128Mi

# containers:
#   - name: app
#     image:
#       repository: nginx
#       pullPolicy: Always
#       tag: "latest"
#     ports:
#     - containerPort: 80
#     livenessProbe:
#       tcpSocket:
#         port: 80
#     readinessProbe:
#       tcpSocket:
#         port: 80
#     # command: []
#     # args: []
#     # securityContext:
#     #   capabilities:
#     #     drop:
#     #     - ALL
#     #   readOnlyRootFilesystem: true
#     #   runAsNonRoot: true
#     #   runAsUser: 1000
#     # env:
#     #   - name: SOME_ENV
#     #     value: "some value"
#     # envFrom:
#     #   - secretRef:
#     #       name: env
#     # volumeMounts:
#     #   - name: config
#     #     mountPath:
#     #   - name: volume
#     #     mountPath:
#     #     subPath:
#     # resources:
#     #   limits:
#     #     cpu: 100m
#     #     memory: 128Mi
#     #   requests:
#     #     cpu: 100m
#     #     memory: 128Mi

# configMaps:
#   - name: nginx
#     data:
#       file: "content"

# secrets:
#   - name: env
#     data:
#       SOME_ENV: "example"

# storages:
#   - name: storage
#     accessModes:
#       - ReadWriteOnce
#     size: 1Gi
#     # className:

# volumes:
#   - name: config
#     configMap:
#       name: config
#   - name: volume
#     persistentVolumeClaim:
#       claimName: storage

# serviceAccount:
#   annotations: {}
#   name:

# annotations: {}

# securityContext:
#   fsGroup: 2000

# services:
#   - name: app
#     type: ClusterIP
#     port: 80
#     targetPort: 80

# ingresses:
#   - name: app
#     # annotations:
#     #   kubernetes.io/ingress.class: nginx
#     #   kubernetes.io/tls-acme: "true"
#     hosts:
#       - host: chart-example.local
#         paths:
#           - path: /
#             serviceName: app
#             servicePort: 80
#     tls:
#     - secretName: chart-example-tls
#       hosts:
#         - chart-example.local

# autoscaling:
#   minReplicas: 1
#   maxReplicas: 10
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# nodeSelector:

# tolerations:

# affinity:
