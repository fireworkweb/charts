replicaCount: 1

# imagePullSecrets:
nameOverride: ""
fullnameOverride: ""

# initContainers:
#   - name: init
#     image:
#       repository: nginx
#       pullPolicy: Always
#       tag: "latest"
#     # command: []
#     # args: []
#     # envFrom:
#     #   - secretRef:
#     #       name: env
#     # volumeMounts:
#     #   - name: config
#     #     mountPath:
#     #   - name: volume
#     #     mountPath:
#     #     subPath:
#     # resources:
#     #   limits:
#     #     cpu: 100m
#     #     memory: 128Mi
#     #   requests:
#     #     cpu: 100m
#     #     memory: 128Mi

containers:
  - name: app
    image:
      repository: nginx
      pullPolicy: Always
      tag: "latest"
    ports:
    - containerPort: 80
    livenessProbe:
      tcpSocket:
        port: 80
    readinessProbe:
      tcpSocket:
        port: 80
    # command: []
    # args: []
    # securityContext:
    #   capabilities:
    #     drop:
    #     - ALL
    #   readOnlyRootFilesystem: true
    #   runAsNonRoot: true
    #   runAsUser: 1000
    # envFrom:
    #   - secretRef:
    #       name: env
    # volumeMounts:
    #   - name: config
    #     mountPath:
    #   - name: volume
    #     mountPath:
    #     subPath:
    # resources:
    #   limits:
    #     cpu: 100m
    #     memory: 128Mi
    #   requests:
    #     cpu: 100m
    #     memory: 128Mi

# configMaps:
#   - name: nginx
#     data:
#       file: "content"

# secrets:
#   - name: env
#     data:
#       SOME_ENV: "example"

# storages:
#   - name: storage
#     accessModes:
#       - ReadWriteOnce
#     size: 1Gi
#     # className:

# volumes:
#   - name: config
#     configMap:
#       name: config
#   - name: volume
#     persistentVolumeClaim:
#       claimName: storage

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# annotations:

# securityContext:
#   fsGroup: 2000

service:
  type: ClusterIP
  port: 80
  targetPort: 80

ingress:
  enabled: false
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - /
  # tls:
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# nodeSelector:

# tolerations:

# affinity:
